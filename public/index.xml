<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Lorenzo Busetto Website &amp; Blog on Lorenzo Busetto Website &amp; Blog</title>
    <link>/</link>
    <description>Recent content in Lorenzo Busetto Website &amp; Blog on Lorenzo Busetto Website &amp; Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>&amp;copy; 2018</copyright>
    <lastBuildDate>Sun, 15 Oct 2017 00:00:00 +0200</lastBuildDate>
    <atom:link href="/" rel="self" type="application/rss+xml" />
    
    <item>
      <title>MODIStsp 1.3.3 is out - Speeding things up and squashing some bugs !</title>
      <link>/post/modistsp-1-3-3-is-out-speeding-things-up-and-squashing-some-bugs/</link>
      <pubDate>Wed, 16 Aug 2017 00:00:00 +0000</pubDate>
      
      <guid>/post/modistsp-1-3-3-is-out-speeding-things-up-and-squashing-some-bugs/</guid>
      <description>

&lt;p&gt;A new version of &lt;a href=&#34;http://lbusett.github.io/MODIStsp/&#34; target=&#34;_blank&#34;&gt;MODIStsp&lt;/a&gt; (1.3.3) is on &lt;a href=&#34;https://cran.r-project.org/web/packages/MODIStsp/index.html&#34; target=&#34;_blank&#34;&gt;CRAN&lt;/a&gt; as of today !
Below, you can find a short description of the main improvements.&lt;/p&gt;

&lt;h2 id=&#34;processing-speed-improvements&#34;&gt;Processing speed improvements&lt;/h2&gt;

&lt;p&gt;Processing of MODIS layers after download (i.e., scale and offset calibration,
computation of Spectral Indexes and Quality Indicators) &lt;strong&gt;is now much faster&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;/img/boxplots.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;As you can see in the figure, &lt;strong&gt;processing time was almost halved&lt;/strong&gt; on my (not so fast)
laptop. This was achieved by &lt;strong&gt;modifying all computation functions so to use
&lt;code&gt;raster::calc()&lt;/code&gt; and &lt;code&gt;raster::overlay()&lt;/code&gt;&lt;/strong&gt; (more on this in a later post).&lt;/p&gt;

&lt;p&gt;Although speed is also limited by download speed and compression options, this
will allow to &lt;strong&gt;save quite some time when working on large areas and with many
MODIS layers&lt;/strong&gt;.&lt;/p&gt;

&lt;h2 id=&#34;test-mode&#34;&gt;Test mode&lt;/h2&gt;

&lt;p&gt;&lt;code&gt;MODIStsp 1.3.3&lt;/code&gt; also introduces a &lt;strong&gt;test mode&lt;/strong&gt;. Although it was mainly developed
to facilitate &lt;a href=&#34;https://en.wikipedia.org/wiki/Unit_testing&#34; target=&#34;_blank&#34;&gt;unit testing&lt;/a&gt;, it is
also available to the user. Running:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;MODIStsp(test = X)  # with X equal to a number between 0 and 6
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;will run &lt;code&gt;MODIStsp&lt;/code&gt; expoiting different sets of processing parameters (available
as JSON files in the Test_files subfolder of &lt;code&gt;MODIStsp&lt;/code&gt; installation). We hope this
will help us in more easily pinpoint and solve eventual problems signalled by users.&lt;/p&gt;

&lt;h3 id=&#34;bug-fixes&#34;&gt;Bug fixes&lt;/h3&gt;

&lt;p&gt;Several bugs discovered after v1.3.2 release were fixed. We thank &lt;code&gt;MODIStsp&lt;/code&gt; users
&lt;a href=&#34;https://github.com/lbusett/MODIStsp/issues?q=is%3Aissue+is%3Aclosed&#34; target=&#34;_blank&#34;&gt;for their feedback&lt;/a&gt;
and help in improving the package ! You can find a list of the main fixes in our
&lt;a href=&#34;http://lbusett.github.io/MODIStsp/news/index.html&#34; target=&#34;_blank&#34;&gt;NEWS&lt;/a&gt; page.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Building a website with `pkgdown`: a short guide</title>
      <link>/post/building-a-website-with-pkgdown-a-short-guide/</link>
      <pubDate>Tue, 01 Aug 2017 00:00:00 +0000</pubDate>
      
      <guid>/post/building-a-website-with-pkgdown-a-short-guide/</guid>
      <description>

&lt;p&gt;As promised in my &lt;a href=&#34;/post/the-new-modistsp-website-based-on-pkgdown-is-online&#34;&gt;last post&lt;/a&gt;,
here is a short guide with some &lt;strong&gt;tips and tricks for building a documentation website&lt;/strong&gt;
for an &lt;code&gt;R&lt;/code&gt; package using &lt;code&gt;pkgdown&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;In the end, this guide ended up way longer than I was expecting, but I hope you&amp;rsquo;ll
find it useful, although it often replicates information already available in &lt;code&gt;pkgdown&lt;/code&gt; documentation !&lt;/p&gt;

&lt;h2 id=&#34;prerequisites&#34;&gt;Prerequisites&lt;/h2&gt;

&lt;p&gt;To build a website using &lt;code&gt;pkgdown&lt;/code&gt;, all you need to have is an &lt;strong&gt;R&lt;/strong&gt; package
&lt;strong&gt;hosted on Git Hub&lt;/strong&gt;, with a file structure &amp;ldquo;tweaked&amp;rdquo; with some functionality
provided by &lt;strong&gt;devtools&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Assuming you are using RStudio, and that you didn&amp;rsquo;t already do this, open the
project corresponding to your package and (as a minimum) run:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;require(devtools)
use_readme_rmd()
use_news_md()
use_vignette(&amp;quot;test&amp;quot;)  #substitute with the name of your package
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Since to use &lt;code&gt;pkgdown&lt;/code&gt; your package must be on Git Hub, you may also want:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;use_github_links()
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;, which will populate automatically some fields in the &lt;strong&gt;DESCRIPTION&lt;/strong&gt; file successively
used to build the home page of your website.&lt;/p&gt;

&lt;p&gt;Other possibly useful commands (depending on the status of your package) may be:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;use_travis()
use_cran_badge()
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;(see &lt;code&gt;devtools&lt;/code&gt; documentation for further info)&lt;/p&gt;

&lt;p&gt;At this point, within your package file structure you should have a &lt;strong&gt;README.Rmd&lt;/strong&gt;
file (which is used also to create the &amp;ldquo;README.md&amp;rdquo; file for Git Hub), and a
&lt;strong&gt;NEWS.md&lt;/strong&gt; file. You should also have a _**man **_subfolder containing the
&lt;em&gt;.Rd&lt;/em&gt; files documenting your functions (usually auto-generated from roxygen
comments using &lt;code&gt;devtools::document()&lt;/code&gt;). Finally, you should have a &lt;strong&gt;my_package.Rmd&lt;/strong&gt;
file in the _vignettes _subfolder (which is used for example by &lt;code&gt;devtools::build_vignette()&lt;/code&gt;
to automatically create a vignette for the package).&lt;/p&gt;

&lt;h2 id=&#34;getting-started-creating-a-bare-bones-website&#34;&gt;Getting Started: creating a bare-bones website&lt;/h2&gt;

&lt;p&gt;To create a standard &lt;code&gt;pkgdown&lt;/code&gt; site, just run:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;devtools::install_githb(&amp;quot;hadley/pkgdown&amp;quot;)
library(pkgdown)
build_site()
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code&gt;build_site()&lt;/code&gt; will do several things:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;create a &amp;ldquo;docs&amp;rdquo; subfolder&lt;/strong&gt; in your file structure, where it will place all
the material needed for rendering the website;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;knit README.Rmd&lt;/strong&gt; to &amp;ldquo;docs/index.html&amp;rdquo;. This will be the home page of your
website;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;knit NEWS.md&lt;/strong&gt; to &amp;ldquo;docs/news/index.html&amp;rdquo; (in this way, any time you update
NEWS.md, the news section of the website can be automatically updated;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;knit all your &amp;ldquo;Rd&amp;rdquo; files&lt;/strong&gt; to &amp;ldquo;docs/reference/&amp;rdquo; as html files inheriting
the name of the function (e.g., &amp;ldquo;docs/reference/myfun_1.html&amp;rdquo; &amp;ldquo;docs/reference/myfun_2.html&amp;rdquo;,
etc.). A &amp;ldquo;docs/reference/index.html&amp;rdquo; page is also created: this is a simple
html page linking to the html documentation pages for the different functions. &lt;em&gt;By default, all functions will be included and listed in alphabetical order&lt;/em&gt;.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;knit any Rmd files in your &amp;ldquo;vignettes&amp;rdquo; subfolder&lt;/strong&gt; to &amp;ldquo;docs/articles&amp;rdquo; as
single html files;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Scrape your package for various other info&lt;/strong&gt; (e.g., Authors, Git Hub address,
License, Citation, badges, etc.) to create additional material on the right-hand
side bar of the home page;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Put everything together&lt;/strong&gt; by some magic to build a working website, and open
a preview in RStudio Viewer or your browser.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The resulting website will look more or less like this:&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;/img/website_basic_pkgdown.png&#34; alt=&#34;&#34; /&gt;&lt;strong&gt;&amp;ldquo;Standard&amp;rdquo; website built by pkgdown::build_site()&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;, with your main vignette linked in &lt;strong&gt;Getting Started&lt;/strong&gt;, and all the other Rmds
found in &lt;em&gt;vignettes&lt;/em&gt; (if any) linked-to in the &lt;strong&gt;Articles&lt;/strong&gt; drop down menu.&lt;/p&gt;

&lt;p&gt;Considering that &lt;strong&gt;all is needed is to run&lt;/strong&gt; &lt;strong&gt;&lt;code&gt;build_site()&lt;/code&gt;&lt;/strong&gt; (in particular if
the package is already using &lt;code&gt;devtools&lt;/code&gt; tweaks), I&amp;rsquo;d say that this is already a nice
result ! However, spending some time in better configuring the structure of the
site and tweaking some small things allows to achieve a much nicer result, as
explained below.&lt;/p&gt;

&lt;h2 id=&#34;customizing-appearence-and-structure-of-the-website-the-pkgdown-yaml-file&#34;&gt;Customizing appearence and structure of the website: the &lt;em&gt;pkgdown.yaml&lt;/em&gt; file&lt;/h2&gt;

&lt;p&gt;Your pkgdown website can be further customized by &lt;strong&gt;creating and customizing a
text file named _&lt;em&gt;pkgdown.yaml&lt;/em&gt; in the root folder of your project&lt;/strong&gt;. The file
needs to have three main sections, which I will describe here using the current
&lt;em&gt;.yaml&lt;/em&gt; file used in the MODIStsp Website as an example (the complete file can
be found &lt;a href=&#34;https://github.com/lbusett/MODIStsp/blob/devel/_pkgdown.yaml&#34; target=&#34;_blank&#34;&gt;here&lt;/a&gt;).&lt;/p&gt;

&lt;h3 id=&#34;the-preamble-section&#34;&gt;&lt;em&gt;The Preamble Section&lt;/em&gt;&lt;/h3&gt;

&lt;p&gt;This is quite straightforward: first of all, give a title to your website and
provide its URL. Then, &lt;strong&gt;select a template to customize its appearance&lt;/strong&gt; from the
ones available at &lt;a href=&#34;https://bootswatch.com/&#34; target=&#34;_blank&#34;&gt;bootswatch&lt;/a&gt;. Finally, add the
GoogleAnalytics tracking code if you wish.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;title: MODIStsp  
url: http://lbusett.github.io/MODIStsp  
template:  
  params:  
    bootswatch: flatly  
    ganalytics: UA-12345678-0
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;the-reference-section&#34;&gt;&lt;em&gt;The Reference Section&lt;/em&gt;&lt;/h3&gt;

&lt;p&gt;Here, you can configure the page of the website **containing the index to the
documentation of your functions **(&lt;em&gt;docs/reference/index.html&lt;/em&gt;). Instead than
having a simple list in alphabetical order, you can &lt;strong&gt;define different groups
and decide which functions to put in each group&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Each group is defined by a &lt;strong&gt;title&lt;/strong&gt;, a &lt;strong&gt;description&lt;/strong&gt; (use ~ for no description),
and a &lt;strong&gt;contents section&lt;/strong&gt; containing an indented list of functions to be included
in that group. Syntax and indentation rules &lt;strong&gt;must be strictly followed but are very
simple.&lt;/strong&gt; Looking at the example below should suffice for understanding it. In this
case I decided to use only two groups: one for exported functions, and one for
everything else, but you can set-up as many groups as you need.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;reference:  
  - title: Exported Functions  
    desc: Functions exported by MODIStsp  
    contents:  
      - &#39;`MODIStsp`&#39;  
      - &#39;`MODIStsp_extract`&#39;  
      - &#39;`MODIStsp_addindex`&#39;  
      - &#39;`install_MODIStsp_launcher`&#39;  
  - title: Internals  
    desc: Internal functions and helpers  
    contents:  
      - &#39;`MODIStsp_GUI`&#39;  
      - &#39;`MODIStsp_process`&#39;  
      - &#39;`MODIStsp_process_indexes`&#39;  
      - &#39;`MODIStsp_process_QA_bits`&#39;  
      - &#39;`MODIStsp_read_xml`&#39;  
      - &#39;`lpdaac_getmod_dirs`&#39;  
      - &#39;`lpdaac_getmod_dates`&#39;  
      - &#39;`lpdaac_getmod_names`&#39;  
      - &#39;`MODIStsp_check_files`&#39;  
      - &#39;`MODIStsp_vrt_create`&#39;  
      - &#39;`bbox_from_file`&#39;  
      - &#39;`reproj_bbox`&#39;  
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;the-navbar-section&#34;&gt;&lt;em&gt;The Navbar Section&lt;/em&gt;&lt;/h3&gt;

&lt;p&gt;The last section of _&lt;em&gt;pkgdown.yaml&lt;/em&gt; is named &lt;strong&gt;navbar&lt;/strong&gt;, and is where most the
customization occurs.&lt;/p&gt;

&lt;p&gt;In the first line, you can choose if using a &lt;strong&gt;standard or inverse color scheme&lt;/strong&gt;
for your boootstrap template. The only way to understand what this does is to try
both and see which one you do prefer.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt; navbar:  
   type: inverse  
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Next, you can define what content will be accessible through &lt;strong&gt;buttons or menus
on the left side&lt;/strong&gt; of the top-menu of the website.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Buttons&lt;/strong&gt; linking to a single page are described by:

&lt;ol&gt;
&lt;li&gt;a &lt;strong&gt;title text or an icon name&lt;/strong&gt; (chosen from &lt;a href=&#34;http://fontawesome.io/icons/&#34; target=&#34;_blank&#34;&gt;http://fontawesome.io/icons/&lt;/a&gt;)
that will be shown on the button;&lt;/li&gt;
&lt;li&gt;a &lt;strong&gt;hyperlink&lt;/strong&gt; to the page that will be accessed through the button (Note
that the hyperlinks are built relative to the root of the &amp;ldquo;docs&amp;rdquo; folder created
by &lt;code&gt;pkgdown&lt;/code&gt; - no need to specify full paths !).&lt;/li&gt;
&lt;/ol&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Dropdown menus&lt;/strong&gt; giving access to multiple pages are described by:

&lt;ol&gt;
&lt;li&gt;a &lt;strong&gt;title text or an icon name&lt;/strong&gt;;&lt;/li&gt;
&lt;li&gt;a &amp;ldquo;menu:&amp;rdquo; line;&lt;/li&gt;
&lt;li&gt;an indented &lt;strong&gt;list of the text entries&lt;/strong&gt; that will appear in the menu,
&lt;em&gt;with the associated hyperlinks&lt;/em&gt;.&lt;/li&gt;
&lt;/ol&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;In the example below, you can see &lt;strong&gt;how the content should be indented and
organized:&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;left:
  - icon: fa-home
    href: index.html
  - text: &amp;quot;How To&amp;quot;
    menu: 
    - text: Installation
      href: articles/installation.html
    - text: Interactive Execution - the MODIStsp GUI
      href: articles/interactive_execution.html
    - text: Non-Interactive Execution from within R
      href: articles/noninteractive_execution.html
    - text: Standalone Execution and Scheduled Processing
      href: articles/standalone_execution.html
    - text: Outputs Format and Naming Conventions
      href: articles/output.html
    - text: Accessing and Analyzing Processed Data from R
      href: articles/analyze.html
    - text: &amp;quot;Examples of Use&amp;quot;
      href: articles/examples.html
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;In the case of MODIStsp website, I decided to not provide a link to the &amp;ldquo;full&amp;rdquo;
vignette (which was linked from &amp;ldquo;Getting Started&amp;rdquo; in the &amp;ldquo;bare-bones&amp;rdquo; website).
Instead, I &lt;strong&gt;divided the contents of that vignette in six shorter articles accessible
from the &amp;ldquo;How To&amp;rdquo; dropdown menu&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;To do that, I just had to &lt;strong&gt;create six separate Rmd files within the vignettes folder&lt;/strong&gt;.
All Rmds within that folder are automatically knitted by pkgdown when launching
either &lt;strong&gt;&lt;code&gt;build_site()&lt;/code&gt;&lt;/strong&gt; or &lt;strong&gt;&lt;code&gt;build_articles()&lt;/code&gt;&lt;/strong&gt;, and are therefore available
for linking from the menu.&lt;/p&gt;

&lt;p&gt;Finally, in the last section of _&lt;em&gt;pkgdown.yaml&lt;/em&gt; you can specify what content should
be accessible from the &lt;strong&gt;right-hand side of the top menu&lt;/strong&gt;. Syntax and indentation
are identical to what described above.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;right: 
  - text: &amp;quot;faq&amp;quot;
    icon: fa-question-circle-o
    href: articles/faq.html
  - icon: fa-newspaper-o
    text: &amp;quot;news&amp;quot;
    href: news/index.html
  - icon: fa-file-code-o 
    text: &amp;quot;functions&amp;quot;
    href: reference/index.html
  - icon: fa-github fa-lg
    text: &amp;quot;github&amp;quot;
    href: https://github.com/lbusett/MODIStsp/
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;In MODIStsp website, we are using the right side of the top menu bar to provide
access to:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;a static page&lt;/strong&gt; containing a FAQ;&lt;/li&gt;
&lt;li&gt;the &lt;strong&gt;auto-generated news page&lt;/strong&gt; (by linking to news/index.html);&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;the function documentation index page&lt;/strong&gt; (by linking to reference/index.html);&lt;/li&gt;
&lt;li&gt;an icon linking to the MODIStsp repository on Git Hub.
&lt;em&gt;(From the example, you can see that it is possible to associate the &amp;ldquo;buttons&amp;rdquo;
with both an icon and a short title text. In that case, the icon and the text will
be shown one after the other.)&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Once your .yaml file is complete, just** run &lt;code&gt;build_site()&lt;/code&gt; again **and check the
results. Then iterate ad-libitum until you are satisfied by the resulting structure.&lt;/p&gt;

&lt;h2 id=&#34;fine-tuning&#34;&gt;Fine tuning&lt;/h2&gt;

&lt;p&gt;When you are satisfied with the structure of the website, you can start &lt;strong&gt;tweaking
its contents&lt;/strong&gt; to achieve a better-looking final result. Here I&amp;rsquo;m just** sharing
some tips and tricks** I learnt while building our website:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;If (like me) you wish to have &lt;strong&gt;a different &amp;ldquo;home page&amp;rdquo; in the website and in
the main Git Hub page&lt;/strong&gt;, you can create a new &lt;em&gt;index.Rmd&lt;/em&gt; file in the root of the
package. If &lt;em&gt;index.Rmd&lt;/em&gt; is found, it is used instead than _README.Rmd _to populate
the home page;&lt;/li&gt;
&lt;li&gt;Text in the &amp;ldquo;standard&amp;rdquo; output is &lt;strong&gt;a bit too &amp;ldquo;compressed&amp;rdquo;&lt;/strong&gt; for my taste. You
can &lt;strong&gt;increase the spacing between the main sections&lt;/strong&gt; of an article by simply
adding a &lt;br&gt; at the end of each main section;&lt;/li&gt;
&lt;li&gt;Similarly, you can &lt;strong&gt;add line separators between section&lt;/strong&gt;s by simply adding
a line of underscores under each section;&lt;/li&gt;
&lt;li&gt;To reduce the &amp;ldquo;wall of text&amp;rdquo; effect, you can &lt;strong&gt;put any of the
&lt;a href=&#34;http://fontawesome.io/icons/&#34; target=&#34;_blank&#34;&gt;http://fontawesome.io/icons/&lt;/a&gt; icons in an article&lt;/strong&gt; by inserting its &amp;ldquo;full html
specification&amp;rdquo; in the text of the corresponding Rmd. (For example,&amp;ldquo;I want a github
icon here: &lt;i&gt; class=&amp;ldquo;fa fa-github aria-hidden=&amp;ldquo;true&amp;rdquo;&amp;gt;&lt;/i&gt;&amp;rdquo; would render in the
website with a &amp;ldquo;Git Hub octopus&amp;rdquo; icon at the end);&lt;/li&gt;
&lt;li&gt;Of course, you can &lt;strong&gt;add any image/R plot by&lt;/strong&gt; linking/creating it in the &lt;em&gt;Rmds&lt;/em&gt;
of the different articles or of the home page;&lt;/li&gt;
&lt;li&gt;If you build the site using** **&lt;strong&gt;build_site(run_dont_run = TRUE)&lt;/strong&gt;, the examples
with the &amp;ldquo;dont_run&amp;rdquo; specification in the roxygen comment will be run, and their
results appear in the documentation page of each function. I find this really
&lt;strong&gt;useful to illustrate the typical behaviour of functions;&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;To &lt;strong&gt;provide modifiers to the standard pkgdown.css and pkgdown.js files&lt;/strong&gt;,
create a new folder named &amp;ldquo;&lt;em&gt;pkgdown&lt;/em&gt;&amp;rdquo; in your project root. As described in &lt;code&gt;pkgdown&lt;/code&gt;
documentation, &amp;ldquo;&lt;em&gt;the content of files &amp;ldquo;extra.css and &amp;ldquo;extra.js&amp;rdquo; placed in this
folder will be copied to docs/ and inserted into the &lt;HEAD&gt; after the default
&lt;code&gt;pkgdown&lt;/code&gt; CSS and JSS&lt;/em&gt;&amp;rdquo;. I for example added the following lines in &lt;em&gt;extra.css&lt;/em&gt;
to have &lt;strong&gt;some additional syntax highlighting&lt;/strong&gt; in the code snippets:&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code&gt;  {
  .fl      {color: blue;}
  .fu      {color: blue;} /* function */
  .ch,.st  {color: orange;} /* string */
  .kw      {color: black;} /* keyword */
  .co      {color: green;} /* comment */
  
  .message { color: gray;   font-weight: bolder;}
  .error   { color: red;  font-weight: bolder;}
  .warning { color: purple; font-weight: bolder;
  }
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;, but if you are more fluent than me in _css _and _js _you can probably tweak
appearance a lot more.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;you &lt;strong&gt;don&amp;rsquo;t need to run the whole build_site() every time&lt;/strong&gt; you wish to adjust
something and check the results. You can use &lt;strong&gt;build_reference()&lt;/strong&gt;, &lt;strong&gt;build_news()&lt;/strong&gt;,
&lt;strong&gt;build_articles()&lt;/strong&gt; and &lt;strong&gt;build_home()&lt;/strong&gt; to update just some sections.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Below, you can see how the &lt;em&gt;.yaml&lt;/em&gt; file described before and the other small &amp;ldquo;tweaks&amp;rdquo; &lt;strong&gt;improved the appearance&lt;/strong&gt; of MODIStsp homepage :&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;/img/MODIStsp_Website_end.png&#34; alt=&#34;&#34; /&gt;&lt;strong&gt;Final Home Page of the MODIStsp website&lt;/strong&gt;&lt;/p&gt;

&lt;h2 id=&#34;deploying-the-website-to-git-hub-and-the-web&#34;&gt;Deploying the website to Git Hub and the web&lt;/h2&gt;

&lt;p&gt;Finally, it&amp;rsquo;s time to &lt;strong&gt;deploy the website&lt;/strong&gt;. To do that:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;Commit and push&lt;/strong&gt; your changes to the remote;&lt;/li&gt;
&lt;li&gt;Login on Git Hub, &lt;strong&gt;navigate to your repo and select &amp;ldquo;Settings&amp;rdquo;&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;Scroll down to find the &lt;strong&gt;&amp;ldquo;Git Hub pages&amp;rdquo; subsection&lt;/strong&gt; and, under &amp;ldquo;Source&amp;rdquo;, select &amp;ldquo;**master branch/docs folder&amp;rdquo; **(from this, you can see that &lt;em&gt;it is fundamental that your website material is pushed to the master branch&lt;/em&gt;)&lt;/li&gt;
&lt;li&gt;click on the link of your website and&amp;hellip; &lt;strong&gt;congratulations: you just published your new pkgdown website !&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;em&gt;(PS: if you find any errors in this guide, or you think additional clarification is needed, please leave a comment to this post !)&lt;/em&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>The new MODIStsp website (based on pkgdown) is online !</title>
      <link>/post/the-new-modistsp-website-based-on-pkgdown-is-online/</link>
      <pubDate>Tue, 25 Jul 2017 00:00:00 +0000</pubDate>
      
      <guid>/post/the-new-modistsp-website-based-on-pkgdown-is-online/</guid>
      <description>&lt;p&gt;The &lt;strong&gt;MODIStsp&lt;/strong&gt; website, which lay abandoned since several months on github
pages, recently underwent a major overhaul thanks to &lt;strong&gt;&lt;a href=&#34;http://hadley.github.io/pkgdown&#34; target=&#34;_blank&#34;&gt;pkgdown&lt;/a&gt;&lt;/strong&gt;.
The new site is now available at &lt;a href=&#34;http://lbusett.github.io/MODIStsp/&#34; target=&#34;_blank&#34;&gt;http://lbusett.github.io/MODIStsp/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;/img/MODIStsp_Website.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;We hope that the revised website will allow to navigate MODIStsp-related material
much more easily than either github or the standard CRAN documentation, and will
therefore help users in better and more easily exploiting MODIStsp functionality.&lt;/p&gt;

&lt;p&gt;The restyling was possible thanks to the very nice &amp;ldquo;&lt;strong&gt;pkgdown&lt;/strong&gt;&amp;rdquo; R package
(&lt;a href=&#34;http://hadley.github.io/pkgdown&#34; target=&#34;_blank&#34;&gt;http://hadley.github.io/pkgdown&lt;/a&gt;), which allows to easily create a static documentation website.&lt;/p&gt;

&lt;p&gt;Though pkgdown does already quite a good job in creating a bare-bones website
exploiting &lt;strong&gt;just the material available in a standard devtools-based R package file
structure&lt;/strong&gt;, I was surprised at &lt;strong&gt;how simply the standard website could be tweaked&lt;/strong&gt;
to obtain a very nice (IMO) final result without needing any particular background
on html, css, etc. !&lt;/p&gt;

&lt;p&gt;(On that, I plan to soon post a short guide containing a few &lt;strong&gt;tips and tricks&lt;/strong&gt;
I learnt in the last days for setting up and configuring a pkgdown website, so stay
tuned !)&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>MODIStsp (v 1.3.2) is on CRAN !</title>
      <link>/post/modistsp-v-1-3-2-is-on-cran/</link>
      <pubDate>Tue, 18 Apr 2017 00:00:00 +0000</pubDate>
      
      <guid>/post/modistsp-v-1-3-2-is-on-cran/</guid>
      <description>&lt;p&gt;We are glad to report that &lt;strong&gt;MODIStsp is now also available on&lt;/strong&gt; &lt;a href=&#34;https://cran.r-project.org/web/packages/MODIStsp/index.html&#34; target=&#34;_blank&#34;&gt;CRAN&lt;/a&gt; ! From now on,
you can therefore install it by simply using:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;code&gt;install.packages(&amp;quot;MODIStsp&amp;quot;)&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;In v 1.3.2 we also added the functionality to automatically &lt;strong&gt;apply scale and offset&lt;/strong&gt;
coefficients on MODIS original values according with the specifications of single
MODIS products. Setting the new &lt;em&gt;&amp;ldquo;Scale output values&amp;rdquo;&lt;/em&gt; option to &amp;ldquo;Yes&amp;rdquo;, scale factors
and offsets are applied (if existing).&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;/img/Figure_2_new_132.png&#34; alt=&#34;&#34; /&gt;&lt;strong&gt;The MODIStsp GUI&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;In this case, for example, Land Surface Temperature values in the output rasters
will be in °K, and spectral indices will be floating point values (e.g., NDVI will
be between -1 and 1 instead than between -10000 and 10000).&lt;/p&gt;

&lt;p&gt;We also &lt;em&gt;corrected a few bugs&lt;/em&gt;, affecting in particular &lt;em&gt;ftp&lt;/em&gt; download, and
&lt;strong&gt;modified the names of some output layers&lt;/strong&gt; to reduce the length and homogenize
output file names, and correct a few errors.&lt;/p&gt;

&lt;p&gt;The changelog for v1.3.2 can be found &lt;a href=&#34;https://github.com/lbusett/MODIStsp/releases/tag/v1.3.2&#34; target=&#34;_blank&#34;&gt;HERE&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;We hope you will find the new version useful and that we didn&amp;rsquo;t introduce too
many bugs ! &lt;strong&gt;Please report any problems in our
&lt;a href=&#34;https://github.com/lbusett/MODIStsp/issues&#34; target=&#34;_blank&#34;&gt;issues&lt;/a&gt; GitHub page.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The &lt;em&gt;development&lt;/em&gt; version of &lt;code&gt;MODIStsp&lt;/code&gt;, containing the latest updates and bug
fixes, will still be available on GitHub. It can be installed using:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;library(devtools)
install_github(&amp;quot;lbusett/MODIStsp&amp;quot;, ref = &amp;quot;master&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code&gt;MODIStsp&lt;/code&gt;  is a R package allowing automatic download and preprocessing of MODIS  Land Products time series - you can find additional information &lt;a href=&#34;/post/modistsp-a-new-r-package-for-modis-land-products-preprocessing&#34;&gt;here&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>MODIStsp v.1.3.1 released !</title>
      <link>/post/modistsp-v-1-3-1-released/</link>
      <pubDate>Mon, 13 Feb 2017 00:00:00 +0000</pubDate>
      
      <guid>/post/modistsp-v-1-3-1-released/</guid>
      <description>&lt;p&gt;&lt;code&gt;MODIStsp&lt;/code&gt; is a &lt;code&gt;R&lt;/code&gt; package allowing &lt;strong&gt;automatic download and preprocessing of MODIS Land Products time series&lt;/strong&gt;, available at this &lt;a href=&#34;https://github.com/lbusett/MODIStsp&#34; target=&#34;_blank&#34;&gt;https://github.com/lbusett/MODIStsp&lt;/a&gt; github page (See also &lt;a href=&#34;/post/modistsp-a-new-r-package-for-modis-land-products-preprocessing&#34;&gt;here&lt;/a&gt; for additional information)&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;v1.3.1&lt;/strong&gt; adds functionality for processing &lt;strong&gt;MODIS snow cover products&lt;/strong&gt;, &lt;strong&gt;accelerated download&lt;/strong&gt;, processing &lt;strong&gt;specified portions of years&lt;/strong&gt;, plus various bug fixing and improvements.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;/img/Figure_2_new.png&#34; alt=&#34;MODIStsp: the main processing GUI&#34; /&gt;&lt;strong&gt;MODIStsp: the main processing GUI&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;See &lt;a href=&#34;https://github.com/lbusett/MODIStsp/releases/tag/v1.3.1&#34; target=&#34;_blank&#34;&gt;here&lt;/a&gt; for a detailed description of introduced changes&lt;/p&gt;

&lt;p&gt;We hope you will find the new version useful and that we didn&amp;rsquo;t introduce too many bugs ! &lt;strong&gt;Please report any problems in our &lt;a href=&#34;https://github.com/lbusett/MODIStsp/issues&#34; target=&#34;_blank&#34;&gt;issues&lt;/a&gt; GitHub page !&lt;/strong&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Example Talk</title>
      <link>/talk/example-talk/</link>
      <pubDate>Sun, 01 Jan 2017 00:00:00 +0100</pubDate>
      
      <guid>/talk/example-talk/</guid>
      <description>&lt;p&gt;Embed your slides or video here using &lt;a href=&#34;https://sourcethemes.com/academic/post/writing-markdown-latex/&#34; target=&#34;_blank&#34;&gt;shortcodes&lt;/a&gt;. Further details can easily be added using &lt;em&gt;Markdown&lt;/em&gt; and $\rm \LaTeX$ math code.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>MODIStsp v1.3.0 released - adds support for Collection 6 datasets</title>
      <link>/post/modistsp-v1-3-0-released-adds-support-for-collection-6-datasets/</link>
      <pubDate>Mon, 07 Nov 2016 00:00:00 +0000</pubDate>
      
      <guid>/post/modistsp-v1-3-0-released-adds-support-for-collection-6-datasets/</guid>
      <description>&lt;p&gt;&lt;strong&gt;MODIStsp v1.3.0 has been finally released !&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;It adds the much-needed functionality for downloading and preprocessing &lt;strong&gt;MODIS
Collection 006 datasets&lt;/strong&gt;. Off-line preprocessing of already downloaded hdf images
was also improved, and the GUI was a bit revamped to improve user-friendliness
(A detailed changelog can be found &lt;a href=&#34;https://github.com/lbusett/MODIStsp/releases/tag/v1.3.0&#34; target=&#34;_blank&#34;&gt;here&lt;/a&gt;).&lt;/p&gt;

&lt;p&gt;More detailed usage instructions were also added to the
&lt;a href=&#34;https://github.com/lbusett/MODIStsp&#34; target=&#34;_blank&#34;&gt;main github page&lt;/a&gt;, and a
&lt;a href=&#34;https://github.com/lbusett/MODIStsp/wiki&#34; target=&#34;_blank&#34;&gt;FAQ section&lt;/a&gt; addressing common issues
with the package (e.g., installation problems, etc) was added.&lt;/p&gt;

&lt;p&gt;We hope you will find the new version useful and that we didn&amp;rsquo;t introduce too
many bugs ! &lt;strong&gt;Please report any problems in our &lt;a href=&#34;https://github.com/lbusett/MODIStsp/issues&#34; target=&#34;_blank&#34;&gt;issues&lt;/a&gt;
GitHub page.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;&amp;ldquo;MODIStsp&amp;rdquo; is a R package allowing automatic download and preprocessing of MODIS
Land Products time series - you can find additional information &lt;a href=&#34;https://spartially.000webhostapp.com/2016/09/modistsp-a-new-r-package-for-modis-land-products-preprocessing&#34; target=&#34;_blank&#34;&gt;here&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>MODIStsp: a new &#34;R&#34; package for MODIS Land Products preprocessing</title>
      <link>/post/modistsp-a-new-r-package-for-modis-land-products-preprocessing/</link>
      <pubDate>Fri, 16 Sep 2016 00:00:00 +0000</pubDate>
      
      <guid>/post/modistsp-a-new-r-package-for-modis-land-products-preprocessing/</guid>
      <description>

&lt;p&gt;In this post, we are introducing &lt;strong&gt;&lt;a href=&#34;http://github.com/lbusett/MODIStsp&#34; target=&#34;_blank&#34;&gt;MODIStsp&lt;/a&gt;&lt;/strong&gt;
a new &amp;ldquo;R&amp;rdquo; package allowing to automatize the creation of time series of rasters
derived from Land Products data derived from MODIS satellite data (; &lt;a href=&#34;http://www.sciencedirect.com/science/article/pii/S0098300416303107&#34; target=&#34;_blank&#34;&gt;www.sciencedirect.com/science/article/pii/S0098300416303107&lt;/a&gt;).&lt;/p&gt;

&lt;p&gt;Development of &lt;code&gt;MODIStsp&lt;/code&gt; started from modifications of the &lt;em&gt;ModisDownload&lt;/em&gt; &amp;ldquo;R&amp;rdquo;
script by Thomas Hengl (&lt;a href=&#34;http://spatial-analyst.net/wiki/index.php?title=Download_and_resampling_of_MODIS_images&#34; target=&#34;_blank&#34;&gt;spatial-analyst.net/wiki/index.php?title=Download_and_resampling_of_MODIS_images&lt;/a&gt;), and successive
adaptations by Babak Naimi (&lt;a href=&#34;http://r-gis.net/?q=ModisDownload&#34; target=&#34;_blank&#34;&gt;r-gis.net/?q=ModisDownload&lt;/a&gt;).
Their functionalities were gradually incremented with the aim of:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Developing a &lt;strong&gt;standalone application&lt;/strong&gt; allowing to perform several preprocessing steps (e.g., download, mosaicking, reprojection and resize) on all available MODIS land products by exploiting a &lt;strong&gt;powerful and user-friendly GUI front-end&lt;/strong&gt;;&lt;/li&gt;
&lt;li&gt;Allowing the &lt;strong&gt;creation of time series of both MODIS original layers and additional Quality Indicators&lt;/strong&gt; (e.g., data acquisition quality, cloud/snow presence, algorithm used for data production, etc. ) extracted from the aggregated bit-field QA layers&lt;/li&gt;
&lt;li&gt;Allowing the &lt;strong&gt;automatic calculation and creation of time series of several additional Spectral Indexes&lt;/strong&gt; starting form MODIS surface reflectance products&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&#34;installation-and-usage&#34;&gt;Installation and usage&lt;/h2&gt;

&lt;p&gt;Detailed installation instructions and notes on use of the package, can be found
in the main github page of the package (&lt;a href=&#34;https://github.com/lbusett/MODIStsp&#34; target=&#34;_blank&#34;&gt;github.com/lbusett/MODIStsp&lt;/a&gt;)
and in the package&amp;rsquo;s &lt;a href=&#34;https://github.com/lbusett/MODIStsp/blob/devel/inst/doc/MODIStsp.pdf&#34; target=&#34;_blank&#34;&gt;vignette&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&#34;basic-interactive-usage&#34;&gt;Basic interactive usage&lt;/h2&gt;

&lt;p&gt;After installing and loading the package, launching the &lt;code&gt;MODIStsp&lt;/code&gt; function without
additional parameters opens a user-friendly GUI for the selection of processing
options required for the creation of the desired MODIS time series (e.g., start
and end dates, geographic extent, type of product and parameters of interest, etc.).&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://spartially.000webhostapp.com/wp-content/uploads/2016/09/snapshot2.png&#34; alt=&#34;The main GUI of MODIStsp&#34; /&gt;&lt;em&gt;The main GUI of MODIStsp&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;After selecting the product, the user can select the MODIS original, QI and SI
layers to be processed by pressing the &lt;strong&gt;Select Layers&lt;/strong&gt; button, which opens a
separate layers&amp;rsquo; selection panel. Although some of the most common SIs available
for computation by default users can add custom ones without modifying &lt;em&gt;&lt;strong&gt;MODIStsp&lt;/strong&gt;&lt;/em&gt;
source code by clicking on the &lt;em&gt;Add Custom Index&lt;/em&gt; button, which allows specifying
the formula of the additional desired SI using a simple GUI interface.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://spartially.000webhostapp.com/wp-content/uploads/2016/09/snapshot3.png&#34; alt=&#34;Example of the GUI for selection of the layers to be processed for product M*D13Q1&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Upon clicking the &amp;ldquo;Start&amp;rdquo; button in the main GUI, required MODIS HDF files are
automatically downloaded from NASA  servers and resized, reprojected, resampled
and processed according to  user&amp;rsquo;s choices.&lt;/p&gt;

&lt;h3 id=&#34;non-interactive-execution-and-scheduled-processing&#34;&gt;Non-interactive execution and scheduled processing&lt;/h3&gt;

&lt;p&gt;Non-interactive execution exploiting a previously created Options File is also
possible, as well as stand-alone execution outside an &amp;ldquo;R&amp;rdquo; environment. This allows
to use scheduled execution of MODIStsp to automatically update time series related
to a MODIS product and extent whenever a new image is available. &lt;strong&gt;For additional details see the main &lt;a href=&#34;http://github.com/lbusett/MODIStsp&#34; target=&#34;_blank&#34;&gt;github&lt;/a&gt; page !&lt;/strong&gt;&lt;/p&gt;

&lt;h3 id=&#34;output-format&#34;&gt;Output format&lt;/h3&gt;

&lt;p&gt;For each desired output layer, outputs are saved as &lt;strong&gt;single-band rasters&lt;/strong&gt;
corresponding to each acquisition date available for the selected MODIS product
within the specified time period.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;R&lt;/code&gt; &lt;em&gt;RasterStack&lt;/em&gt; objects with temporal information as well as Virtual  raster
files (GDAL vrt and/or ENVI META files) facilitating access to the entire time
series can be also created.&lt;/p&gt;

&lt;h3 id=&#34;accessing-and-analyzing-the-processed-time-series-from-r&#34;&gt;Accessing and analyzing the processed time series from R&lt;/h3&gt;

&lt;p&gt;Preprocessed MODIS data can be retrieved within R scripts either by accessing the
single-date raster files, or by loading the saved &lt;em&gt;RasterStack&lt;/em&gt; objects. This second
option allows accessing the complete data stack and analyzing it using the
functionalities for raster/raster time series analysis, extraction and plotting
provided for example by the &lt;code&gt;raster&lt;/code&gt; or &lt;code&gt;rasterVis&lt;/code&gt; packages.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;&lt;strong&gt;MODIStsp&lt;/strong&gt;&lt;/em&gt; provides however also an efficient function (&lt;code&gt;MODIStsp_extract()&lt;/code&gt;)
for extracting time series data at specific locations. The function takes as input
a &lt;code&gt;rasterStack&lt;/code&gt; object with temporal information created by &lt;em&gt;&lt;strong&gt;MODIStsp&lt;/strong&gt;&lt;/em&gt;, the
starting and ending dates for the extraction and a standard R &lt;code&gt;Sp*&lt;/code&gt; object (or an
ESRI shapefile name) specifying the locations (points, lines or polygons) of interest,
and provides as output a R &lt;em&gt;xts&lt;/em&gt; object or &lt;em&gt;data.frame&lt;/em&gt; containing time series for
those locations. As an example the following code:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;#Set the input paths to raster and shape file
infile &amp;lt;- &#39;in_path/MOD13Q1_MYD13Q1_NDVI_49_2000_353_2015_RData.RData&#39;
shp_name &amp;lt;- &#39;path_to_file/rois.shp&#39;
#Set the start/end dates for extraction
start_date &amp;lt;- as.Date(&amp;quot;2010-01-01&amp;quot;)
end_date &amp;lt;- as.Date(&amp;quot;2014-12-31&amp;quot;)
#Load the RasterStack
inrts &amp;lt;- get(load(infile))

# Compute average and St.dev
dataavg &amp;lt;- MODIStsp_extract(inrts, shp_name, start_date, end_date, FUN = &#39;mean&#39;, na.rm = T)
datasd &amp;lt;- MODIStsp_extract(inrts, shp_name, start_date, end_date, FUN = &#39;sd&#39;, na.rm = T)
# Plot average time series for the polygons
plot.xts(dataavg)

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;, loads a &lt;code&gt;RasterStack&lt;/code&gt; object containing 8-days 250 m resolution time series for
the 2000-2015 period and extracts time series of average and standard deviation
values over the different polygons of a user&amp;rsquo;s selected shapefile on the 2010-2014
period. The function exploits rasterization of the input &lt;code&gt;Sp*&lt;/code&gt; object and fast
summarization based on the use of _data.table _objects to greatly increase the
speed of data extraction with respect to standard R functions.&lt;/p&gt;

&lt;h3 id=&#34;authors&#34;&gt;Authors&lt;/h3&gt;

&lt;p&gt;The package is developed and maintained by Lorenzo Busetto and Luigi Ranghetti (Institute for
Remote Sensing of Environment - National Research Council of Italy).&lt;/p&gt;

&lt;h3 id=&#34;problems-and-issues&#34;&gt;Problems and issues&lt;/h3&gt;

&lt;p&gt;Any problems/issues can be reported at: &lt;a href=&#34;https://github.com/lbusett/MODIStsp/issues&#34; target=&#34;_blank&#34;&gt;github.com/lbusett/MODIStsp/issues&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&#34;publication-and-citation&#34;&gt;Publication and citation&lt;/h3&gt;

&lt;p&gt;A paper on MODIStsp was recently published in the &amp;ldquo;Computers &amp;amp; Geosciences&amp;rdquo; journal &lt;a href=&#34;http://www.sciencedirect.com/science/article/pii/S0098300416303107&#34; target=&#34;_blank&#34;&gt;www.sciencedirect.com/science/article/pii/S0098300416303107&lt;/a&gt;.To cite MODIStsp please use:&lt;/p&gt;

&lt;p&gt;L. Busetto, L. Ranghetti (2016) MODIStsp: An R package for automatic preprocessing of MODIS
Land Products time series, Computers &amp;amp; Geosciences, Volume 97, Pages
40-48, ISSN 0098-3004, &lt;a href=&#34;http://dx.doi.org/10.1016/j.cageo.2016.08.020&#34; target=&#34;_blank&#34;&gt;http://dx.doi.org/10.1016/j.cageo.2016.08.020&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Welcome to this Blog</title>
      <link>/post/welcome-to-this-blog/</link>
      <pubDate>Thu, 15 Sep 2016 00:00:00 +0000</pubDate>
      
      <guid>/post/welcome-to-this-blog/</guid>
      <description>&lt;p&gt;Hi all,&lt;/p&gt;

&lt;p&gt;I&amp;rsquo;ll use this blog to share posts mostly related to tips and tricks about
Spatial Processing and satellite image analysis in &amp;ldquo;R&amp;rdquo;, as well as to share
interesting resources concerning &amp;ldquo;R&amp;rdquo; programming in general.&lt;/p&gt;

&lt;p&gt;HTH,&lt;/p&gt;

&lt;p&gt;Lorenzo&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>MODIStsp</title>
      <link>/project/modistsp/</link>
      <pubDate>Wed, 27 Apr 2016 00:00:00 +0000</pubDate>
      
      <guid>/project/modistsp/</guid>
      <description></description>
    </item>
    
    <item>
      <title>SPRAWL</title>
      <link>/project/sprawl/</link>
      <pubDate>Wed, 27 Apr 2016 00:00:00 +0000</pubDate>
      
      <guid>/project/sprawl/</guid>
      <description></description>
    </item>
    
    <item>
      <title>A Person Re-Identification System For Mobile Devices</title>
      <link>/publication/person-re-identification/</link>
      <pubDate>Tue, 01 Sep 2015 00:00:00 +0000</pubDate>
      
      <guid>/publication/person-re-identification/</guid>
      <description>&lt;p&gt;More detail can easily be written here using &lt;em&gt;Markdown&lt;/em&gt; and $\rm \LaTeX$ math code.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Mobile visual clothing search</title>
      <link>/publication/clothing-search/</link>
      <pubDate>Mon, 01 Jul 2013 00:00:00 +0000</pubDate>
      
      <guid>/publication/clothing-search/</guid>
      <description>&lt;p&gt;More detail can easily be written here using &lt;em&gt;Markdown&lt;/em&gt; and $\rm \LaTeX$ math code.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>
